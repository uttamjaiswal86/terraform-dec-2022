saravanans@skillsasap-vm24:~/tf_azure_storage_demo$
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ ls
main.tf       storage.tf         terraform.tfstate.backup
providers.tf  terraform.tfstate  variables.tf
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ nano storage.tf
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ cat storage.tf
resource "random_string" "storageSuffix" {
  length  = 6
  special = false
  upper   = false
}


resource "azurerm_storage_account" "storagedemo" {
  name                     = "mystorage${random_string.storageSuffix.result}"
  resource_group_name      = azurerm_resource_group.demorg.name
  location                 = var.location

  account_tier             = "Standard"
  account_replication_type = "LRS"

  tags = {
    environment = "robochefweb"
  }
}

resource "azurerm_storage_container" "demoscontainer" {
  name = "myscontainer2023${random_string.storageSuffix.result}"
  storage_account_name  = azurerm_storage_account.storagedemo.name
  container_access_type = "private"
}


resource "azurerm_storage_blob" "mydata" {
  name                   = "mydata.csv"
  storage_account_name   = azurerm_storage_account.storagedemo.name
  storage_container_name = azurerm_storage_container.demoscontainer.name
  type                   = "Block"
  source                 = "data.csv"
}

saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ ls
main.tf       storage.tf         terraform.tfstate.backup
providers.tf  terraform.tfstate  variables.tf
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ echo hello folks > data.csv
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ cat data.csv
hello folks
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ terraform plan
random_string.rgsuffix: Refreshing state... [id=9ks8r]
random_string.storageSuffix: Refreshing state... [id=l6d1nb]
azurerm_resource_group.demorg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstorage9ks8r]
azurerm_storage_account.storagedemo: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstorage9ks8r/providers/Microsoft.Storage/storageAccounts/mystoragel6d1nb]
azurerm_storage_container.demoscontainer: Refreshing state... [id=https://mystoragel6d1nb.blob.core.windows.net/myscontainer2023l6d1nb]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_storage_blob.mydata will be created
  + resource "azurerm_storage_blob" "mydata" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "mydata.csv"
      + parallelism            = 8
      + size                   = 0
      + source                 = "data.csv"
      + storage_account_name   = "mystoragel6d1nb"
      + storage_container_name = "myscontainer2023l6d1nb"
      + type                   = "Block"
      + url                    = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

──────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ terraform apply
random_string.rgsuffix: Refreshing state... [id=9ks8r]
random_string.storageSuffix: Refreshing state... [id=l6d1nb]
azurerm_resource_group.demorg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstorage9ks8r]
azurerm_storage_account.storagedemo: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstorage9ks8r/providers/Microsoft.Storage/storageAccounts/mystoragel6d1nb]
azurerm_storage_container.demoscontainer: Refreshing state... [id=https://mystoragel6d1nb.blob.core.windows.net/myscontainer2023l6d1nb]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_storage_blob.mydata will be created
  + resource "azurerm_storage_blob" "mydata" {
      + access_tier            = (known after apply)
      + content_type           = "application/octet-stream"
      + id                     = (known after apply)
      + metadata               = (known after apply)
      + name                   = "mydata.csv"
      + parallelism            = 8
      + size                   = 0
      + source                 = "data.csv"
      + storage_account_name   = "mystoragel6d1nb"
      + storage_container_name = "myscontainer2023l6d1nb"
      + type                   = "Block"
      + url                    = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_storage_blob.mydata: Creating...
azurerm_storage_blob.mydata: Creation complete after 1s [id=https://mystoragel6d1nb.blob.core.windows.net/myscontainer2023l6d1nb/mydata.csv]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$ terraform state list
azurerm_resource_group.demorg
azurerm_storage_account.storagedemo
azurerm_storage_blob.mydata
azurerm_storage_container.demoscontainer
random_string.rgsuffix
random_string.storageSuffix
saravanans@skillsasap-vm24:~/tf_azure_storage_demo$
