saravanans@skillsasap-vm24:~$ mkdir tf_rand_demo2
saravanans@skillsasap-vm24:~$ cd tf_rand_demo2
saravanans@skillsasap-vm24:~/tf_rand_demo2$ nano main.tf
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}
saravanans@skillsasap-vm24:~/tf_rand_demo2$

saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/random...
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform apply

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # random_string.demodata will be created
  + resource "random_string" "demodata" {
      + id          = (known after apply)
      + length      = 12
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = true
      + upper       = true
    }

  # random_string.demodata2 will be created
  + resource "random_string" "demodata2" {
      + id          = (known after apply)
      + length      = 18
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = true
      + upper       = true
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_string.demodata: Creating...
random_string.demodata2: Creating...
random_string.demodata: Creation complete after 0s [id=vJI3cr-w2avW]
random_string.demodata2: Creation complete after 0s [id=o=W*v#fumv=d{YSQDL]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
saravanans@skillsasap-vm24:~/tf_rand_demo2$


saravanans@skillsasap-vm24:~/tf_rand_demo2$ ls
main.tf  terraform.tfstate
saravanans@skillsasap-vm24:~/tf_rand_demo2$ nano main.tf
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}

resource "local_file" "file1" {
  filename = "/tmp/hello-file1.txt"
  content = "new content"
}

saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform apply
╷
│ Error: Inconsistent dependency lock file
│
│ The following dependency selections recorded in the lock file are inconsistent
│ with the current configuration:
│   - provider registry.terraform.io/hashicorp/local: required by this configuration but no version is selected
│
│ To update the locked dependency selections to match a changed configuration,
│ run:
│   terraform init -upgrade
╵
saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform init

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/random from the dependency lock file
- Finding latest version of hashicorp/local...
- Installing hashicorp/local v2.4.0...
- Installed hashicorp/local v2.4.0 (signed by HashiCorp)
- Using previously-installed hashicorp/random v3.5.1

Terraform has made some changes to the provider dependency selections recorded
in the .terraform.lock.hcl file. Review those changes and commit them to your
version control system if they represent changes you intended to make.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform apply
random_string.demodata: Refreshing state... [id=vJI3cr-w2avW]
random_string.demodata2: Refreshing state... [id=o=W*v#fumv=d{YSQDL]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # local_file.file1 will be created
  + resource "local_file" "file1" {
      + content              = "new content"
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/hello-file1.txt"
      + id                   = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

local_file.file1: Creating...
local_file.file1: Creation complete after 0s [id=ca527369d9e8c1e081558bd92f90f65c4eb77e21]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
saravanans@skillsasap-vm24:~/tf_rand_demo2$
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}

resource "local_file" "file1" {
  filename = "/tmp/hello-file1.txt"
  content = "new content"
}

saravanans@skillsasap-vm24:~/tf_rand_demo2$

saravanans@skillsasap-vm24:~/tf_rand_demo2$ ls /tmp/hello*
/tmp/hello-file1.txt
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat /tmp/hello-file1.txt
new contentsaravanans@skillsasap-vm24:~/tf_rand_demo2$ nano main.tf
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}

resource "local_file" "file1" {
  filename = "/tmp/hello-file1.txt"
  content = random_string.demodata.result
}

saravanans@skillsasap-vm24:~/tf_rand_demo2$

saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}

resource "local_file" "file1" {
  filename = "/tmp/hello-file1.txt"
  content = random_string.demodata.result
}

saravanans@skillsasap-vm24:~/tf_rand_demo2$
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat /tmp/hello-file1.txt
saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform apply
random_string.demodata2: Refreshing state... [id=o=W*v#fumv=d{YSQDL]
random_string.demodata: Refreshing state... [id=vJI3cr-w2avW]
local_file.file1: Refreshing state... [id=ca527369d9e8c1e081558bd92f90f65c4eb77e21]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # local_file.file1 must be replaced
-/+ resource "local_file" "file1" {
      ~ content              = "new content" -> "vJI3cr-w2avW" # forces replacement
      ~ content_base64sha256 = "/jJgjJ71ts9+P5RkgCU/928k9OwGePPQ8H+YRMv/lgE=" -> (known after apply)
      ~ content_base64sha512 = "v5QnIpJeO2SE7srnyMXGsg+yntId1CpC2tniC+P+lZOS3lqEUW6hyoM9vb7zd1ynN7hXGXvQw168oi/KiJ9uJA==" -> (known after apply)
      ~ content_md5          = "96c15c2bb2921193bf290df8cd85e2ba" -> (known after apply)
      ~ content_sha1         = "ca527369d9e8c1e081558bd92f90f65c4eb77e21" -> (known after apply)
      ~ content_sha256       = "fe32608c9ef5b6cf7e3f946480253ff76f24f4ec0678f3d0f07f9844cbff9601" -> (known after apply)
      ~ content_sha512       = "bf942722925e3b6484eecae7c8c5c6b20fb29ed21dd42a42dad9e20be3fe959392de5a84516ea1ca833dbdbef3775ca737b857197bd0c35ebca22fca889f6e24" -> (known after apply)
      ~ id                   = "ca527369d9e8c1e081558bd92f90f65c4eb77e21" -> (known after apply)
        # (3 unchanged attributes hidden)
    }

Plan: 1 to add, 0 to change, 1 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

local_file.file1: Destroying... [id=ca527369d9e8c1e081558bd92f90f65c4eb77e21]
local_file.file1: Destruction complete after 0s
local_file.file1: Creating...
local_file.file1: Creation complete after 0s [id=efd806f745fe3ed9f65c2e085d3b736c645c3c42]

Apply complete! Resources: 1 added, 0 changed, 1 destroyed.
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat /tmp/hello-file1.txt
vJI3cr-w2avWsaravanans@skillsasap-vm24:~/tf_rand_demo2$

saravanans@skillsasap-vm24:~/tf_rand_demo2$ vi main.tf
saravanans@skillsasap-vm24:~/tf_rand_demo2$ cat main.tf
resource "random_string" "demodata" {
   length = "12"
}

resource "random_string" "demodata2" {
   length = "18"
}

/*
resource "local_file" "file1" {
  filename = "/tmp/hello-file1.txt"
  content = random_string.demodata.result
}
*/

saravanans@skillsasap-vm24:~/tf_rand_demo2$ terraform apply
random_string.demodata: Refreshing state... [id=NGS*b)-6w[e=]
random_string.demodata2: Refreshing state... [id=xrHfE@wt#m5a#m?AIs]
local_file.file1: Refreshing state... [id=5ab9da2718211caf7603ef0bc800c62c5f7097c0]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # local_file.file1 will be destroyed
  # (because local_file.file1 is not in configuration)
  - resource "local_file" "file1" {
      - content              = "NGS*b)-6w[e=" -> null
      - content_base64sha256 = "BazmHtfi59Z+UHWqjvoFAZOestNDW8nZqko1R42HfOI=" -> null
      - content_base64sha512 = "jLgapHfHN6EhsubqUJvw7yTriNqkF5ZT377N2JSbXE+j/5ltKmdblJzJXoX1RTKv+oaQwG9nTwxxJAWeK7qL5A==" -> null
      - content_md5          = "9b1fc513dd22b73890eb6a14f69b7af7" -> null
      - content_sha1         = "5ab9da2718211caf7603ef0bc800c62c5f7097c0" -> null
      - content_sha256       = "05ace61ed7e2e7d67e5075aa8efa0501939eb2d3435bc9d9aa4a35478d877ce2" -> null
      - content_sha512       = "8cb81aa477c737a121b2e6ea509bf0ef24eb88daa4179653dfbecdd8949b5c4fa3ff996d2a675b949cc95e85f54532affa8690c06f674f0c7124059e2bba8be4" -> null
      - directory_permission = "0777" -> null
      - file_permission      = "0777" -> null
      - filename             = "/tmp/hello-file1.txt" -> null
      - id                   = "5ab9da2718211caf7603ef0bc800c62c5f7097c0" -> null
    }

Plan: 0 to add, 0 to change, 1 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

local_file.file1: Destroying... [id=5ab9da2718211caf7603ef0bc800c62c5f7097c0]
local_file.file1: Destruction complete after 0s

Apply complete! Resources: 0 added, 0 changed, 1 destroyed.
saravanans@skillsasap-vm24:~/tf_rand_demo2$
saravanans@skillsasap-vm24:~/tf_rand_demo2$


