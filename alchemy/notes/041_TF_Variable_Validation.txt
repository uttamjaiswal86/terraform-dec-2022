saravanans@myvm24:~$
saravanans@myvm24:~$ mkdir tf_var_validation
saravanans@myvm24:~$ cd tf_var_validation
saravanans@myvm24:~/tf_var_validation$ vi main.tf
saravanans@myvm24:~/tf_var_validation$ vi providers.tf 
saravanans@myvm24:~/tf_var_validation$ vi main.tf
saravanans@myvm24:~/tf_var_validation$ vi main.tf
saravanans@myvm24:~/tf_var_validation$ vi variables.tf
saravanans@myvm24:~/tf_var_validation$ cat main.tf
resource "azurerm_resource_group" "rg" {
  name = "${var.suffix}robochefRG"
  # location = "westus"
  location = var.location
}


saravanans@myvm24:~/tf_var_validation$ cat variables.tf
variable "location" { 
        description = "used to mention the resourc group location"
        default = "westus"
}

variable "suffix" {
  description = "numerical suffix for rg"
  type = number

}

saravanans@myvm24:~/tf_var_validation$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/azurerm...
- Installing hashicorp/azurerm v3.71.0...
- Installed hashicorp/azurerm v3.71.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@myvm24:~/tf_var_validation$ terraform apply

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "9090robochefRG"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: ^C
╷
│ Error: error asking for approval: interrupted
│
│
╵

Interrupt received.
Please wait for Terraform to exit or data loss may occur.
Gracefully shutting down...

saravanans@myvm24:~/tf_var_validation$
saravanans@myvm24:~/tf_var_validation$ vi variables.tf
saravanans@myvm24:~/tf_var_validation$
saravanans@myvm24:~/tf_var_validation$ env| grep TF_
TF_VAR_suffix=9090
saravanans@myvm24:~/tf_var_validation$ unset TF_VAR_suffix
saravanans@myvm24:~/tf_var_validation$ env| grep TF_
saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 12


Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "12robochefRG"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: no

Apply cancelled.
saravanans@myvm24:~/tf_var_validation$ vi variables.tf
saravanans@myvm24:~/tf_var_validation$ vi main.tf
saravanans@myvm24:~/tf_var_validation$ cat main.tf
resource "azurerm_resource_group" "rg" {
  name = "${var.suffix}robochefRG"
  # location = "westus"
  location = var.location
}


saravanans@myvm24:~/tf_var_validation$ cat variables.tf
variable "location" {
        description = "used to mention the resourc group location"
        default = "westus"
}

variable "suffix" {
  description = "numerical suffix for rg"
  type = number
  validation {
    condition = length(var.suffix) > 3
    error_message = "give atleast a 4 digit numeric value"

  }
}

saravanans@myvm24:~/tf_var_validation$ cat providers.tf
provider "azurerm" {
  features {}
}


saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 123

╷
│ Error: Error in function call
│
│   on variables.tf line 10, in variable "suffix":
│   on variables.tf line 10, in variable "suffix":
│   10:     condition = length(var.suffix) > 3
│     ├────────────────
│     │ while calling length(value)
│     │ var.suffix is a number
│
│ Call to function "length" failed: argument must be a string, a collection type,
│ or a structural type.
╵
saravanans@myvm24:~/tf_var_validation$ cat providers.tf
saravanans@myvm24:~/tf_var_validation$ cat providers.tf
provider "azurerm" {
  features {}
}


saravanans@myvm24:~/tf_var_validation$ cat variables.tf
variable "location" {
        description = "used to mention the resourc group location"
        default = "westus"
}

variable "suffix" {
  description = "numerical suffix for rg"
  type = number
  validation {
    condition = length(var.suffix) > 3
    error_message = "give atleast a 4 digit numeric value"

  }
}

saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 11

╷
│ Error: Error in function call
│
│   on variables.tf line 10, in variable "suffix":
│   10:     condition = length(var.suffix) > 3
│     ├────────────────
│     │ while calling length(value)
│     │ var.suffix is a number
│
│ Call to function "length" failed: argument must be a string, a collection type,
│ or a structural type.
╵
saravanans@myvm24:~/tf_var_validation$ vi main.tf
saravanans@myvm24:~/tf_var_validation$ vi variables.tf
saravanans@myvm24:~/tf_var_validation$ cat variables.tf
variable "location" {
        description = "used to mention the resourc group location"
        default = "westus"
}

variable "suffix" {
  description = "numerical suffix for rg"
  validation {
    condition = length(var.suffix) > 3
    error_message = "give atleast a 4 digit numeric value"

  }
}

saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 12

╷
│ Error: Invalid value for variable
│
│   on variables.tf line 6:
│    6: variable "suffix" {
│     ├────────────────
│     │ var.suffix is "12"
│
│ give atleast a 4 digit numeric value
│
│ This was checked by the validation rule at variables.tf:8,3-13.
╵
saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 100

╷
│ Error: Invalid value for variable
│
│   on variables.tf line 6:
│    6: variable "suffix" {
│     ├────────────────
│     │ var.suffix is "100"
│
│ give atleast a 4 digit numeric value
│
│ This was checked by the validation rule at variables.tf:8,3-13.
╵
saravanans@myvm24:~/tf_var_validation$ terraform apply
var.suffix
  numerical suffix for rg

  Enter a value: 1234


Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "1234robochefRG"
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes                                                                                                                                                  azurerm_resource_group.rg: Creating...                                             azurerm_resource_group.rg: Creation complete after 1s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/1234robochefRG]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
saravanans@myvm24:~/tf_var_validation$ cat variables.tf
variable "location" {
        description = "used to mention the resourc group location"
        default = "westus"
}

variable "suffix" {
  description = "numerical suffix for rg"
  validation {
    condition = length(var.suffix) > 3
    error_message = "give atleast a 4 digit numeric value"

  }
}

saravanans@myvm24:~/tf_var_validation$
saravanans@myvm24:~/tf_var_validation$

