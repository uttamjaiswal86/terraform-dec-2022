saravanans@skillsasap-vm24:~$ ls
saravanans@skillsasap-vm24:~$ terraform
terraform: command not found


saravanans@skillsasap-vm24:~$  wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg


.....
HTTP request sent, awaiting response... 200 OK
Length: 3980 (3.9K) [binary/octet-stream]
Saving to: ‘STDOUT’

-                    100%[=====================>]   3.89K  --.-KB/s    in 0s

2023-09-18 06:10:29 (215 MB/s) - written to stdout [3980/3980]


saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$  echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list


saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$ sudo apt update && sudo apt install terraform

.../terraform_1.5.7-1_amd64.deb ...
Unpacking terraform (1.5.7-1) ...
Setting up terraform (1.5.7-1) ...
saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$ terraform version
Terraform v1.5.7
on linux_amd64
saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$ ls
saravanans@skillsasap-vm24:~$ mkdir tf_local_demo
saravanans@skillsasap-vm24:~$ cd tf_local_demo
saravanans@skillsasap-vm24:~/tf_local_demo$ ls
saravanans@skillsasap-vm24:~/tf_local_demo$ nano main.tf
saravanans@skillsasap-vm24:~/tf_local_demo$ cat main.tf
resource "local_file" "robochef_web" {
  filename = "/tmp/hello.txt"
  contents = "Hello world"
}
saravanans@skillsasap-vm24:~/tf_local_demo$ ls
main.tf
saravanans@skillsasap-vm24:~/tf_local_demo$ ls -a
.  ..  main.tf
saravanans@skillsasap-vm24:~/tf_local_demo$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/local...
- Installing hashicorp/local v2.4.0...
- Installed hashicorp/local v2.4.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/tf_local_demo$ ls -a
.  ..  .terraform  .terraform.lock.hcl  main.tf
saravanans@skillsasap-vm24:~/tf_local_demo$

saravanans@skillsasap-vm24:~/tf_local_demo$ cat main.tf
resource "local_file" "robochef_web" {
  filename = "/tmp/hello.txt"
  content = "Hello world"
}
saravanans@skillsasap-vm24:~/tf_local_demo$ terraform plan

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # local_file.robochef_web will be created
  + resource "local_file" "robochef_web" {
      + content              = "Hello world"
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/hello.txt"
      + id                   = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

──────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
saravanans@skillsasap-vm24:~/tf_local_demo$ ls /tmp/hell*
ls: cannot access '/tmp/hell*': No such file or directory
saravanans@skillsasap-vm24:~/tf_local_demo$ terraform apply

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # local_file.robochef_web will be created
  + resource "local_file" "robochef_web" {
      + content              = "Hello world"
      + content_base64sha256 = (known after apply)
      + content_base64sha512 = (known after apply)
      + content_md5          = (known after apply)
      + content_sha1         = (known after apply)
      + content_sha256       = (known after apply)
      + content_sha512       = (known after apply)
      + directory_permission = "0777"
      + file_permission      = "0777"
      + filename             = "/tmp/hello.txt"
      + id                   = (known after apply)
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

local_file.robochef_web: Creating...
local_file.robochef_web: Creation complete after 0s [id=7b502c3a1f48c8609ae212cdfb639dee39673f5e]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
saravanans@skillsasap-vm24:~/tf_local_demo$ ls /tmp/hell*
/tmp/hello.txt
saravanans@skillsasap-vm24:~/tf_local_demo$ cat /tmp/hello.txt
Hello worldsaravanans@skillsasap-vm24:~/tf_local_demo$ ls
main.tf  terraform.tfstate
saravanans@skillsasap-vm24:~/tf_local_demo$
saravanans@skillsasap-vm24:~/tf_local_demo$ ls
main.tf  terraform.tfstate
saravanans@skillsasap-vm24:~/tf_local_demo$
