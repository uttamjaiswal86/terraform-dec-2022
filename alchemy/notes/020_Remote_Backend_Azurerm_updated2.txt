

## cat outputs.tf


output "rgname" {
  value = azurerm_resource_group.demorg.name
}

output "storage_account" {
  value = azurerm_storage_account.storagedemo.name
}

output "storage_container" {
  value = azurerm_storage_container.demoscontainer.name
}








saravanans@skillsasap-vm24:~$ ls

tf_azure_intro         tf_count_demo   tf_rand_demo2      tf_state_demo
tf_azure_network       tf_local_demo   tf_random_demo     tf_var_demo
tf_azure_storage_demo  tf_output_demo  tf_sensitive_demo  tf_var_file
saravanans@skillsasap-vm24:~$ mkdir tf_azurebackend_vm
saravanans@skillsasap-vm24:~$ cd tf_azurebackend_vm
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano terraform.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat terraform.tf
terraform {
  backend "azurerm" {
    resource_group_name  = "rgstorage9ks8r"
    storage_account_name = "mystorage84h37owvm"
    container_name       = "myscontainer202384h37owvm"
    key                  = "terraform.tfstate"
  }
}
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano main.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat main.tf
resource "azurerm_resource_group" "myterraformgroup" {
  name     = "admatic-rg-network-demo"
  location = var.location
}

resource "azurerm_virtual_network" "myterraformnetwork" {
  name                = "myVnet"
  address_space       = ["10.0.0.0/16"]
  location            = var.location
  resource_group_name = azurerm_resource_group.myterraformgroup.name
}

resource "azurerm_subnet" "myterraformsubnet" {
  name                 = "mySubnnet"
  resource_group_name  = azurerm_resource_group.myterraformgroup.name
  virtual_network_name = azurerm_virtual_network.myterraformnetwork.name
  address_prefixes     = ["10.0.1.0/24"]
}

resource "azurerm_network_security_group" "myterraformnsg" {
  name                = "myNetworkSecurityGroup"
  location            = var.location
  resource_group_name = azurerm_resource_group.myterraformgroup.name

  security_rule {
    name                       = "Web"
    priority                   = 1001
    direction                  = "Inbound"
    access                     = "Allow"
    protocol                   = "Tcp"
    source_port_range          = "*"
    destination_port_range     = var.ssh_port
    source_address_prefix      = "*"
    destination_address_prefix = "*"
  }
}

resource "azurerm_network_interface" "myterraformnic" {
  name                = "myNIC"
  location            = var.location
  resource_group_name = azurerm_resource_group.myterraformgroup.name

  ip_configuration {
    name                          = "myNicConfiguration"
    subnet_id                     = azurerm_subnet.myterraformsubnet.id
    private_ip_address_allocation = "Dynamic"
    public_ip_address_id        = azurerm_public_ip.myterraformpublicip.id
  }
}

resource "azurerm_network_interface_security_group_association" "example" {
  network_interface_id      = azurerm_network_interface.myterraformnic.id
  network_security_group_id = azurerm_network_security_group.myterraformnsg.id
}

resource "azurerm_public_ip" "myterraformpublicip" {
  name                = "myPublicIP"
  location            = var.location
  resource_group_name = azurerm_resource_group.myterraformgroup.name
  allocation_method   = "Dynamic"

}

resource "azurerm_linux_virtual_machine" "myterraformvm" {
  name                  = "myAdmaticVM"
  location              = var.location
  resource_group_name   = azurerm_resource_group.myterraformgroup.name
  network_interface_ids = [azurerm_network_interface.myterraformnic.id]

  size = "Standard_B2s"

  os_disk {
    name                 = "myOsDisk"
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }

  admin_username                  = "saravanans"
  admin_password                  = random_string.sshpassword.result
  disable_password_authentication = false
}

resource "random_string" "sshpassword" {
  length  = 20
  special = true
}

saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat variables.tf
variable "location" {
        description = "location for the azure resources "
       default = "eastus"
}

variable "ssh_port" {
  description = "port number of ssh on vm"
}


saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano outputs.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat outputs.tf
output "ssh_password" {
  value = random_string.sshpassword.result
}

output "vm_public_ip" {
  value = azurerm_public_ip.myterraformpublicip.ip_address
}

saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
main.tf  outputs.tf  terraform.tf  variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano terraform.tfvars
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat terraform.tfvars
ssh_port = "22"
location = "eastus"
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
main.tf  outputs.tf  terraform.tf  terraform.tfvars  variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ nano providers.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ cat providers.tf
provider "azurerm" {
  features {}
}

saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
main.tf  outputs.tf  providers.tf  terraform.tf  terraform.tfvars  variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$

saravanans@skillsasap-vm24:~/tf_azurebackend_vm$
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ terraform init

Initializing the backend...

Successfully configured the backend "azurerm"! Terraform will automatically
use this backend unless the backend configuration changes.

Initializing provider plugins...
- Finding latest version of hashicorp/azurerm...
- Finding latest version of hashicorp/random...
- Installing hashicorp/azurerm v3.73.0...
- Installed hashicorp/azurerm v3.73.0 (signed by HashiCorp)
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
main.tf  outputs.tf  providers.tf  terraform.tf  terraform.tfvars  variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource actions are
indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.myterraformvm will be created
  + resource "azurerm_linux_virtual_machine" "myterraformvm" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "saravanans"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "myAdmaticVM"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "admatic-rg-network-demo"
      + size                                                   = "Standard_B2s"
      + virtual_machine_id                                     = (known after apply)

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "myOsDisk"
          + storage_account_type      = "Premium_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }
    }

  # azurerm_network_interface.myterraformnic will be created
  + resource "azurerm_network_interface" "myterraformnic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "myNIC"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "admatic-rg-network-demo"
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "myNicConfiguration"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.example will be created
  + resource "azurerm_network_interface_security_group_association" "example" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.myterraformnsg will be created
  + resource "azurerm_network_security_group" "myterraformnsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myNetworkSecurityGroup"
      + resource_group_name = "admatic-rg-network-demo"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Web"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # azurerm_public_ip.myterraformpublicip will be created
  + resource "azurerm_public_ip" "myterraformpublicip" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "myPublicIP"
      + resource_group_name     = "admatic-rg-network-demo"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.myterraformgroup will be created
  + resource "azurerm_resource_group" "myterraformgroup" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "admatic-rg-network-demo"
    }

  # azurerm_subnet.myterraformsubnet will be created
  + resource "azurerm_subnet" "myterraformsubnet" {
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "mySubnnet"
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "admatic-rg-network-demo"
      + virtual_network_name                           = "myVnet"
    }

  # azurerm_virtual_network.myterraformnetwork will be created
  + resource "azurerm_virtual_network" "myterraformnetwork" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myVnet"
      + resource_group_name = "admatic-rg-network-demo"
      + subnet              = (known after apply)
    }

  # random_string.sshpassword will be created
  + resource "random_string" "sshpassword" {
      + id          = (known after apply)
      + length      = 20
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = true
      + upper       = true
    }

Plan: 9 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + ssh_password = (known after apply)
  + vm_public_ip = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_string.sshpassword: Creating...
random_string.sshpassword: Creation complete after 0s [id=A--yk_7d&PDRYQCqw+HL]
azurerm_resource_group.myterraformgroup: Creating...
azurerm_resource_group.myterraformgroup: Creation complete after 0s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo]
azurerm_public_ip.myterraformpublicip: Creating...
azurerm_virtual_network.myterraformnetwork: Creating...
azurerm_network_security_group.myterraformnsg: Creating...
azurerm_public_ip.myterraformpublicip: Creation complete after 2s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/publicIPAddresses/myPublicIP]
azurerm_network_security_group.myterraformnsg: Creation complete after 2s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_virtual_network.myterraformnetwork: Creation complete after 4s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet]
azurerm_subnet.myterraformsubnet: Creating...
azurerm_subnet.myterraformsubnet: Creation complete after 4s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnnet]
azurerm_network_interface.myterraformnic: Creating...
azurerm_network_interface.myterraformnic: Still creating... [10s elapsed]
azurerm_network_interface.myterraformnic: Creation complete after 11s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC]
azurerm_network_interface_security_group_association.example: Creating...
azurerm_linux_virtual_machine.myterraformvm: Creating...
azurerm_network_interface_security_group_association.example: Creation complete after 1s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC|/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [30s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [40s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Creation complete after 50s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Compute/virtualMachines/myAdmaticVM]

Apply complete! Resources: 9 added, 0 changed, 0 destroyed.

Outputs:

ssh_password = "A--yk_7d&PDRYQCqw+HL"
vm_public_ip = ""
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ terraform refresh
random_string.sshpassword: Refreshing state... [id=A--yk_7d&PDRYQCqw+HL]
azurerm_resource_group.myterraformgroup: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo]
azurerm_public_ip.myterraformpublicip: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/publicIPAddresses/myPublicIP]
azurerm_network_security_group.myterraformnsg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_virtual_network.myterraformnetwork: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet]
azurerm_subnet.myterraformsubnet: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnnet]
azurerm_network_interface.myterraformnic: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC]
azurerm_network_interface_security_group_association.example: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC|/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_linux_virtual_machine.myterraformvm: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Compute/virtualMachines/myAdmaticVM]

Outputs:

ssh_password = "A--yk_7d&PDRYQCqw+HL"
vm_public_ip = "20.51.132.61"
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$ ls
main.tf  outputs.tf  providers.tf  terraform.tf  terraform.tfvars  variables.tf
saravanans@skillsasap-vm24:~/tf_azurebackend_vm$



### check the state file under azure storage container 


