saravanans@skillsasap-vm24:~$ ls
tf_azure_intro         tf_azurebackend_vm  tf_output_demo  tf_sensitive_demo  tf_var_file
tf_azure_network       tf_count_demo       tf_rand_demo2   tf_state_demo
tf_azure_storage_demo  tf_local_demo       tf_random_demo  tf_var_demo
saravanans@skillsasap-vm24:~$
saravanans@skillsasap-vm24:~$ mkdir admatic_terraform_workspace
saravanans@skillsasap-vm24:~$ cd admatic_terraform_workspace
saravanans@skillsasap-vm24:~/admatic_terraform_workspace$ mkdir modules
saravanans@skillsasap-vm24:~/admatic_terraform_workspace$ cd modules
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules$

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cat providers.tf
provider "azurerm" {
  features {}
}

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cat variables.tf
variable "location" {
	description = "mention the region / location"
}

variable "rgsuffix" {
	description = "suffix for rg"

}

variable "ssh_user" {

}
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cat public_ip.tf
resource "azurerm_public_ip" "myterraformpublicip" {
  name                = "myPublicIP"
  location            = var.location
  resource_group_name = azurerm_resource_group.myterraformgroup.name
  allocation_method   = "Dynamic"

}
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cat main.tf
resource "random_string" "rgprefix" {
   length = "9"
   special = false
}

resource "azurerm_resource_group" "myterraformgroup" {
	name = "${random_string.rgprefix.result}rgdemo-${var.rgsuffix}"
	location = var.location
}

resource "random_string" "vm_prefix" {
  length  = 6
  special = false
}

resource "azurerm_linux_virtual_machine" "myterraformvm" {
  name                  = "${random_string.vm_prefix.result}myAdmaticVM"
  location              = var.location
  resource_group_name   = azurerm_resource_group.myterraformgroup.name
  network_interface_ids = [azurerm_network_interface.myterraformnic.id]

  size = "Standard_B2s"

  os_disk {
    name                 = "myOsDisk"
    caching              = "ReadWrite"
    storage_account_type = "Premium_LRS"
  }

  source_image_reference {
    publisher = "Canonical"
    offer     = "UbuntuServer"
    sku       = "18.04-LTS"
    version   = "latest"
  }

  admin_username = var.ssh_user
  admin_password = random_string.sshpassword.result
  disable_password_authentication = false
}


resource "random_string" "sshpassword" {
  length  = 20
  special = true
}

resource "azurerm_virtual_network" "myterraformnetwork" {
        name = "myVnet"
        address_space = ["10.0.0.0/16"]
	location = var.location
        resource_group_name = azurerm_resource_group.myterraformgroup.name
}

resource "azurerm_subnet" "myterraformsubnet" {
        name = "mySubnnet"
        resource_group_name = azurerm_resource_group.myterraformgroup.name
        virtual_network_name = azurerm_virtual_network.myterraformnetwork.name
        address_prefixes = ["10.0.1.0/24"]
}

resource "azurerm_network_security_group" "myterraformnsg" {
        name                = "myNetworkSecurityGroup"
	location = var.location
        resource_group_name = azurerm_resource_group.myterraformgroup.name

        security_rule {
        name                       = "Web"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "8080"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
    }
}


resource "azurerm_network_interface" "myterraformnic" {
    name                      = "myNIC"
	location = var.location
    resource_group_name       = azurerm_resource_group.myterraformgroup.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.myterraformsubnet.id
        private_ip_address_allocation = "Dynamic"
	public_ip_address_id = azurerm_public_ip.myterraformpublicip.id
    }
}

resource "azurerm_network_interface_security_group_association" "example" {
        network_interface_id      = azurerm_network_interface.myterraformnic.id
        network_security_group_id = azurerm_network_security_group.myterraformnsg.id
}

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cat outputs.tf
output "ssh_password" {
  value = random_string.sshpassword.result
}

output "sshuser" {
  value = var.ssh_user
}

output "vm_public_ip" {
  value = azurerm_public_ip.myterraformpublicip.ip_address
}
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ ls
main.tf  outputs.tf  providers.tf  public_ip.tf  variables.tf
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$

saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules/azure_linuxvm$ cd ..
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/modules$ cd ..
saravanans@skillsasap-vm24:~/admatic_terraform_workspace$ tree .
.
├── modules
│   └── azure_linuxvm
│       ├── main.tf
│       ├── outputs.tf
│       ├── providers.tf
│       ├── public_ip.tf
│       └── variables.tf
└── tf_mywebinfra
    └── main.tf

3 directories, 7 files
saravanans@skillsasap-vm24:~/admatic_terraform_workspace$


saravanans@skillsasap-vm24:~/admatic_terraform_workspace$ cd tf_mywebinfra/
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ cat main.tf
module "azure_linuxvm" {
  source = "../modules/azure_linuxvm"
}
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ terraform init

Initializing the backend...
Initializing modules...
- azure_linuxvm in ../modules/azure_linuxvm

Initializing provider plugins...
- Finding latest version of hashicorp/azurerm...
- Finding latest version of hashicorp/random...
- Installing hashicorp/azurerm v3.73.0...
- Installed hashicorp/azurerm v3.73.0 (signed by HashiCorp)
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ terraform apply
╷
│ Error: Missing required argument
│
│   on main.tf line 1, in module "azure_linuxvm":
│    1: module "azure_linuxvm" {
│
│ The argument "location" is required, but no definition was found.
╵
╷
│ Error: Missing required argument
│
│   on main.tf line 1, in module "azure_linuxvm":
│    1: module "azure_linuxvm" {
│
│ The argument "rgsuffix" is required, but no definition was found.
╵
╷
│ Error: Missing required argument
│
│   on main.tf line 1, in module "azure_linuxvm":
│    1: module "azure_linuxvm" {
│
│ The argument "ssh_user" is required, but no definition was found.
╵
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ nano main.tf
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ cat main.tf
module "azure_linuxvm" {
  source = "../modules/azure_linuxvm"
  location = "westus2"
  rgsuffix = "fromModuleDemo"
  ssh_user = "skillsasap"
}
saravanans@skillsasap-vm24:~/admatic_terraform_workspace/tf_mywebinfra$ terraform apply



