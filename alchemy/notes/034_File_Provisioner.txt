saravanans@myvm24:~/tf_file_provisioner$
saravanans@myvm24:~/tf_file_provisioner$ cat vm_creation.tf
provider "azurerm" {
	features {}
}

resource "azurerm_resource_group" "myterraformgroup" {
    name     = "myResourceGroup"
    location = "eastus"
}

resource "azurerm_virtual_network" "myterraformnetwork" {
	name = "myVnet"
	address_space = ["10.0.0.0/16"]
	location = "eastus"
	resource_group_name = azurerm_resource_group.myterraformgroup.name
}

resource "azurerm_public_ip" "myterraformpublicip" {
    name                         = "myPublicIP"
    location                     = "eastus"
    resource_group_name          = azurerm_resource_group.myterraformgroup.name
    allocation_method            = "Dynamic"
}

 
resource "azurerm_subnet" "myterraformsubnet" {
	name = "mySubnet"
	resource_group_name = azurerm_resource_group.myterraformgroup.name
	virtual_network_name = azurerm_virtual_network.myterraformnetwork.name
	address_prefixes = ["10.0.1.0/24"]
}

resource "azurerm_network_security_group" "myterraformnsg" {
    name                = "myNetworkSecurityGroup"
    location            = "eastus"
    resource_group_name = azurerm_resource_group.myterraformgroup.name

    security_rule {
        name                       = "Web"
        priority                   = 1001
        direction                  = "Inbound"
        access                     = "Allow"
        protocol                   = "Tcp"
        source_port_range          = "*"
        destination_port_range     = "22"
        source_address_prefix      = "*"
        destination_address_prefix = "*"
    }
}

resource "azurerm_network_interface" "myterraformnic" {
    name                      = "myNIC"
    location                  = "eastus"
    resource_group_name       = azurerm_resource_group.myterraformgroup.name

    ip_configuration {
        name                          = "myNicConfiguration"
        subnet_id                     = azurerm_subnet.myterraformsubnet.id
        private_ip_address_allocation = "Dynamic"
        public_ip_address_id          = azurerm_public_ip.myterraformpublicip.id
    }
}


resource "azurerm_network_interface_security_group_association" "example" {
    network_interface_id      = azurerm_network_interface.myterraformnic.id
    network_security_group_id = azurerm_network_security_group.myterraformnsg.id
}


resource "azurerm_linux_virtual_machine" "myterraformvm" {
    name                  = "admaticmyVM"
    location              = "eastus"
    resource_group_name   = azurerm_resource_group.myterraformgroup.name
    network_interface_ids = [azurerm_network_interface.myterraformnic.id]
    #size                  = "Standard_DS1_v2"
    size                  = "Standard_B1s"

    os_disk {
        name              = "myOsDisk"
        caching           = "ReadWrite"
        storage_account_type = "Premium_LRS"
    }

    source_image_reference {
        publisher = "Canonical"
        offer     = "UbuntuServer"
        sku       = "18.04-LTS"
        version   = "latest"
    }

    admin_username = "admatic"
    admin_password = "Sincere-Compete-Spoil-Private-3"
    disable_password_authentication = false


}

output "public_ip" {
  value = azurerm_public_ip.myterraformpublicip.ip_address
  description = "The public IP address of the vm"
}

saravanans@myvm24:~/tf_file_provisioner$ cat main.tf



  connection {
    type     = "ssh"
    host     = azurerm_public_ip.myterraformpublicip.ip_address
    user     = "admatic"
    password = "Sincere-Compete-Spoil-Private-3"
    port     = 22
    agent    = false

  }


  provisioner "file" {
    source      = "data.txt"
    destination = "/tmp/mydata-new.txt"
  }
}

saravanans@myvm24:~/tf_file_provisioner$

saravanans@myvm24:~/tf_file_provisioner$
saravanans@myvm24:~/tf_file_provisioner$ terraform init && terraform apply --auto-approve

Initializing the backend...

Initializing provider plugins...
- Reusing previous version of hashicorp/null from the dependency lock file
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Using previously-installed hashicorp/null v3.2.1
- Using previously-installed hashicorp/azurerm v3.71.0

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
azurerm_resource_group.myterraformgroup: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup]
azurerm_virtual_network.myterraformnetwork: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet]
azurerm_public_ip.myterraformpublicip: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/publicIPAddresses/myPublicIP]
azurerm_network_security_group.myterraformnsg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
null_resource.copy_file: Refreshing state... [id=8205581189134846913]
azurerm_subnet.myterraformsubnet: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet]
azurerm_network_interface.myterraformnic: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNIC]
azurerm_network_interface_security_group_association.example: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNIC|/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_linux_virtual_machine.myterraformvm: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/admaticmyVM]

Terraform used the selected providers to generate the
following execution plan. Resource actions are indicated with
the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # null_resource.copy_file is tainted, so must be replaced
-/+ resource "null_resource" "copy_file" {
      ~ id = "8205581189134846913" -> (known after apply)
    }

Plan: 1 to add, 0 to change, 1 to destroy.
null_resource.copy_file: Destroying... [id=8205581189134846913]
null_resource.copy_file: Destruction complete after 0s
null_resource.copy_file: Creating...
null_resource.copy_file: Provisioning with 'file'...
null_resource.copy_file: Creation complete after 1s [id=464659077521778358]

Apply complete! Resources: 1 added, 0 changed, 1 destroyed.

Outputs:

public_ip = "52.150.10.108"
saravanans@myvm24:~/tf_file_provisioner$ ssh admatic@52.150.10.108
The authenticity of host '52.150.10.108 (52.150.10.108)' can't be established.
ED25519 key fingerprint is SHA256:TFfXucqvtzyM4/iXeRm00c5HzU3LS+fwi5iTsBvo3HE.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '52.150.10.108' (ED25519) to the list of known hosts.
admatic@52.150.10.108's password:
Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 5.4.0-1109-azure x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Fri Sep  1 07:09:56 UTC 2023

  System load:  0.02              Processes:           105
  Usage of /:   4.6% of 28.89GB   Users logged in:     0
  Memory usage: 21%               IP address for eth0: 10.0.1.4
  Swap usage:   0%


Expanded Security Maintenance for Infrastructure is not enabled.

0 updates can be applied immediately.

Enable ESM Infra to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status

New release '20.04.6 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

admatic@admaticmyVM:~$ ls /tmp/
mydata-new.txt
snap-private-tmp
systemd-private-5b94e9aae1a44667a2ab0299e3943de5-systemd-resolved.service-DTlG5x
systemd-private-5b94e9aae1a44667a2ab0299e3943de5-systemd-timesyncd.service-AXzX7S
admatic@admaticmyVM:~$ cat /tmp/mydata-new.txt
hello god
admatic@admaticmyVM:~$ logout
Connection to 52.150.10.108 closed.
saravanans@myvm24:~/tf_file_provisioner$






