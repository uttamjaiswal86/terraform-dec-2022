saravanans@skillsasap-vm24:~$ mkdir tf_var_demo
saravanans@skillsasap-vm24:~$ cd tf_var_demo
saravanans@skillsasap-vm24:~/tf_var_demo$ cp ../tf_
tf_azure_intro/    tf_output_demo/    tf_sensitive_demo/
tf_count_demo/     tf_rand_demo2/     tf_state_demo/
tf_local_demo/     tf_random_demo/    tf_var_demo/
saravanans@skillsasap-vm24:~/tf_var_demo$ nano providers.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat providers.tf
provider "azurerm" {
  features {}

  skip_provider_registration = true
}
saravanans@skillsasap-vm24:~/tf_var_demo$ vi providers.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat providers.tf
provider "azurerm" {
  features {}

  #skip_provider_registration = true
}
saravanans@skillsasap-vm24:~/tf_var_demo$ nano main.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat main.tf
resource "random_string" "rgprefix" {
   length = "9"
   special = false
}

resource "azurerm_resource_group" "myrg" {
	name = "${random_string.rgprefix}rgdemo"
	location =
}
saravanans@skillsasap-vm24:~/tf_var_demo$
saravanans@skillsasap-vm24:~/tf_var_demo$ nano variables.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat variables.tf
variable "location" {
	description = "mntion the region / location"
}
saravanans@skillsasap-vm24:~/tf_var_demo$ nano main.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat main.tf
resource "random_string" "rgprefix" {
   length = "9"
   special = false
}

resource "azurerm_resource_group" "myrg" {
	name = "${random_string.rgprefix}rgdemo"
	location = var.location
}
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/random...
- Finding latest version of hashicorp/azurerm...
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)
- Installing hashicorp/azurerm v3.73.0...
- Installed hashicorp/azurerm v3.73.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform apply
var.location
  mntion the region / location

  Enter a value: eastus


Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform planned the following actions, but then encountered a problem:

  # random_string.rgprefix will be created
  + resource "random_string" "rgprefix" {
      + id          = (known after apply)
      + length      = 9
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = true
    }

Plan: 1 to add, 0 to change, 0 to destroy.
╷
│ Error: Invalid template interpolation value
│
│   on main.tf line 7, in resource "azurerm_resource_group" "myrg":
│    7: 	name = "${random_string.rgprefix}rgdemo"
│     ├────────────────
│     │ random_string.rgprefix is object with 14 attributes
│
│ Cannot include the given value in a string template: string required.
╵
saravanans@skillsasap-vm24:~/tf_var_demo$ nano main.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform apply
var.location
  mntion the region / location

  Enter a value: eastus


Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.myrg will be created
  + resource "azurerm_resource_group" "myrg" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = (known after apply)
    }

  # random_string.rgprefix will be created
  + resource "random_string" "rgprefix" {
      + id          = (known after apply)
      + length      = 9
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = true
    }

Plan: 2 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_string.rgprefix: Creating...
random_string.rgprefix: Creation complete after 0s [id=Zoj832vaE]
azurerm_resource_group.myrg: Creating...
azurerm_resource_group.myrg: Creation complete after 1s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]

Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform state list
azurerm_resource_group.myrg
random_string.rgprefix
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform state show azurerm_resource_group.myrg
# azurerm_resource_group.myrg:
resource "azurerm_resource_group" "myrg" {
    id       = "/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo"
    location = "eastus"
    name     = "Zoj832vaErgdemo"
}
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform apply
var.location
  mntion the region / location

  Enter a value: westus

random_string.rgprefix: Refreshing state... [id=Zoj832vaE]
azurerm_resource_group.myrg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # azurerm_resource_group.myrg must be replaced
-/+ resource "azurerm_resource_group" "myrg" {
      ~ id       = "/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo" -> (known after apply)
      ~ location = "eastus" -> "westus" # forces replacement
        name     = "Zoj832vaErgdemo"
      - tags     = {} -> null
    }

Plan: 1 to add, 0 to change, 1 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.myrg: Destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]
azurerm_resource_group.myrg: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...2c503f9/resourceGroups/Zoj832vaErgdemo, 10s elapsed]
azurerm_resource_group.myrg: Destruction complete after 16s
azurerm_resource_group.myrg: Creating...
azurerm_resource_group.myrg: Creation complete after 1s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]

Apply complete! Resources: 1 added, 0 changed, 1 destroyed.
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform state show azurerm_resource_group.myrg
# azurerm_resource_group.myrg:
resource "azurerm_resource_group" "myrg" {
    id       = "/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo"
    location = "westus"
    name     = "Zoj832vaErgdemo"
}
saravanans@skillsasap-vm24:~/tf_var_demo$ ls
main.tf  providers.tf  terraform.tfstate  terraform.tfstate.backup  variables.tf
saravanans@skillsasap-vm24:~/tf_var_demo$
saravanans@skillsasap-vm24:~/tf_var_demo$ nano variables.tf
saravanans@skillsasap-vm24:~/tf_var_demo$ cat variables.tf
variable "location" {
	description = "mntion the region / location"
}

variable "rgsuffix" {
	description = "suffix for RG name"
}
saravanans@skillsasap-vm24:~/tf_var_demo$ terraform apply
var.location
  mntion the region / location

  Enter a value: eastus

var.rgsuffix
  suffix for RG name

  Enter a value: 007

random_string.rgprefix: Refreshing state... [id=Zoj832vaE]
azurerm_resource_group.myrg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
-/+ destroy and then create replacement

Terraform will perform the following actions:

  # azurerm_resource_group.myrg must be replaced
-/+ resource "azurerm_resource_group" "myrg" {
      ~ id       = "/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo" -> (known after apply)
      ~ location = "westus" -> "eastus" # forces replacement
        name     = "Zoj832vaErgdemo"
      - tags     = {} -> null
    }

Plan: 1 to add, 0 to change, 1 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.myrg: Destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]
azurerm_resource_group.myrg: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...2c503f9/resourceGroups/Zoj832vaErgdemo, 10s elapsed]
azurerm_resource_group.myrg: Destruction complete after 17s
azurerm_resource_group.myrg: Creating...
azurerm_resource_group.myrg: Creation complete after 1s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/Zoj832vaErgdemo]

Apply complete! Resources: 1 added, 0 changed, 1 destroyed.
saravanans@skillsasap-vm24:~/tf_var_demo$
saravanans@skillsasap-vm24:~/tf_var_demo$