saravanans@skillsasap-vm:~$ cd admatic_terraform_workspace
saravanans@skillsasap-vm:~/admatic_terraform_workspace$ tree .
saravanans@skillsasap-vm24:~/admatic_terraform_workspace$

saravanans@skillsasap-vm:~/admatic_terraform_workspace$ cd modules/
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ mkdir azure_storage
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ touch main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ nano main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ ls
azure_linuxvm  azure_storage  main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ rm main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules$ cd azure_storage
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ rm main.tf
rm: cannot remove 'main.tf': No such file or directory
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ nano main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ ls
main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ nano variables.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ cat variables.tf
variable "scontainer" { }
variable "location" { }
variable "rgroup" { }
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ nano main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ ls
main.tf  variables.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ cat variables.tf
variable "scontainer" { }
variable "location" { }
variable "rgroup" { }
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ nano variables.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ ls
main.tf  variables.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ cat main.tf
resource "random_string" "rgsuffix" {
  length  = 5
  special = false
  upper   = false
}

resource "azurerm_resource_group" "demorg" {
  name = var.rgroup
  location = var.location
}

resource "random_string" "storageSuffix" {
  length  = 6
  special = false
  upper   = false
}

resource "azurerm_storage_account" "storagedemo" {
  name                     = var.saname
  resource_group_name      = azurerm_resource_group.demorg.name
  location                 = var.location

  account_tier             = "Standard"
  account_replication_type = "LRS"

  tags = {
    environment = "robochefweb"
  }
}

resource "azurerm_storage_container" "demoscontainer" {
  name = var.scontainer
  storage_account_name  = azurerm_storage_account.storagedemo.name
  container_access_type = "private"
}
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ cat variables.tf
variable "scontainer" { }
variable "location" { }
variable "rgroup" { }
variable "saname" { }
saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$

saravanans@skillsasap-vm:~/admatic_terraform_workspace/modules/azure_storage$ cd ../../
saravanans@skillsasap-vm:~/admatic_terraform_workspace$ ls
modules  tf_mywebinfra
saravanans@skillsasap-vm:~/admatic_terraform_workspace$ cd tf_mywebinfra/
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ ls
main.tf  outputs.tf  terraform.tfstate  terraform.tfstate.backup  terraform.tfvars  variables.tf




saravanans@skillsasap-vm:~/admatic_terraform_workspace$ cd tf_mywebinfra/
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ ls
main.tf  outputs.tf  terraform.tfstate  terraform.tfstate.backup  terraform.tfvars  variables.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ vi main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ cat ../modules/azure_linuxvm/providers.tf
provider "azurerm" {
  features {}
}
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ cp ../modules/azure_linuxvm/providers.tf .
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ rm ../modules/azure_linuxvm/providers.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ ls
main.tf     providers.tf       terraform.tfstate.backup  variables.tf
outputs.tf  terraform.tfstate  terraform.tfvars
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ cat providers.tf
provider "azurerm" {
  features {}
}
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ nano

saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ ls
main.tf     providers.tf       terraform.tfstate.backup  variables.tf
outputs.tf  terraform.tfstate  terraform.tfvars
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ cat providers.tf
provider "azurerm" {
  features {}
}
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ nano main.tf
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ cat main.tf
module "azure_linuxvm" {
  source = "../modules/azure_linuxvm"
  location = "westus"
  rgsuffix = "fromModuleDemo"
  ssh_user = var.sshuname
}

module "azure_storage" {
  source = "../modules/azure_storage"
  scontainer = "scontainer12345"
  location = "westus"
  rgroup = "rgstore1212"
  saname = "sademo1212"
}
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$

saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ terraform apply
╷
│ Error: Module not installed
│
│   on main.tf line 10:
│   10: module "azure_storage" {
│
│ This module is not yet installed. Run "terraform init" to install all modules required by this
│ configuration.
╵
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ terraform init

Initializing the backend...
Initializing modules...
- azure_storage in ../modules/azure_storage

Initializing provider plugins...
- Reusing previous version of hashicorp/azurerm from the dependency lock file
- Finding latest version of hashicorp/random...
- Using previously-installed hashicorp/azurerm v3.72.0
- Installing hashicorp/random v3.5.1...
- Installed hashicorp/random v3.5.1 (signed by HashiCorp)

Terraform has made some changes to the provider dependency selections recorded
in the .terraform.lock.hcl file. Review those changes and commit them to your
version control system if they represent changes you intended to make.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$

saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ terraform apply
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo]
module.azure_linuxvm.azurerm_public_ip.myterraformpublicip: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/publicIPAddresses/myPublicIP]
module.azure_linuxvm.azurerm_network_security_group.myterraformnsg: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
module.azure_linuxvm.azurerm_virtual_network.myterraformnetwork: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet]
module.azure_linuxvm.azurerm_subnet.myterraformsubnet: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnnet]
module.azure_linuxvm.azurerm_network_interface.myterraformnic: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC]
module.azure_linuxvm.azurerm_network_interface_security_group_association.example: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkInterfaces/myNIC|/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
module.azure_linuxvm.azurerm_linux_virtual_machine.myterraformvm: Refreshing state... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo/providers/Microsoft.Compute/virtualMachines/mydemovmrc]

Terraform used the selected providers to generate the following execution plan. Resource actions are
indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.azure_storage.azurerm_resource_group.demorg will be created
  + resource "azurerm_resource_group" "demorg" {
      + id       = (known after apply)
      + location = "westus"
      + name     = "rgstore1212"
    }

  # module.azure_storage.azurerm_storage_account.storagedemo will be created
  + resource "azurerm_storage_account" "storagedemo" {
      + access_tier                       = (known after apply)
      + account_kind                      = "StorageV2"
      + account_replication_type          = "LRS"
      + account_tier                      = "Standard"
      + allow_nested_items_to_be_public   = true
      + cross_tenant_replication_enabled  = true
      + default_to_oauth_authentication   = false
      + enable_https_traffic_only         = true
      + id                                = (known after apply)
      + infrastructure_encryption_enabled = false
      + is_hns_enabled                    = false
      + large_file_share_enabled          = (known after apply)
      + location                          = "westus"
      + min_tls_version                   = "TLS1_2"
      + name                              = "sademo1212"
      + nfsv3_enabled                     = false
      + primary_access_key                = (sensitive value)
      + primary_blob_connection_string    = (sensitive value)
      + primary_blob_endpoint             = (known after apply)
      + primary_blob_host                 = (known after apply)
      + primary_connection_string         = (sensitive value)
      + primary_dfs_endpoint              = (known after apply)
      + primary_dfs_host                  = (known after apply)
      + primary_file_endpoint             = (known after apply)
      + primary_file_host                 = (known after apply)
      + primary_location                  = (known after apply)
      + primary_queue_endpoint            = (known after apply)
      + primary_queue_host                = (known after apply)
      + primary_table_endpoint            = (known after apply)
      + primary_table_host                = (known after apply)
      + primary_web_endpoint              = (known after apply)
      + primary_web_host                  = (known after apply)
      + public_network_access_enabled     = true
      + queue_encryption_key_type         = "Service"
      + resource_group_name               = "rgstore1212"
      + secondary_access_key              = (sensitive value)
      + secondary_blob_connection_string  = (sensitive value)
      + secondary_blob_endpoint           = (known after apply)
      + secondary_blob_host               = (known after apply)
      + secondary_connection_string       = (sensitive value)
      + secondary_dfs_endpoint            = (known after apply)
      + secondary_dfs_host                = (known after apply)
      + secondary_file_endpoint           = (known after apply)
      + secondary_file_host               = (known after apply)
      + secondary_location                = (known after apply)
      + secondary_queue_endpoint          = (known after apply)
      + secondary_queue_host              = (known after apply)
      + secondary_table_endpoint          = (known after apply)
      + secondary_table_host              = (known after apply)
      + secondary_web_endpoint            = (known after apply)
      + secondary_web_host                = (known after apply)
      + sftp_enabled                      = false
      + shared_access_key_enabled         = true
      + table_encryption_key_type         = "Service"
      + tags                              = {
          + "environment" = "robochefweb"
        }
    }

  # module.azure_storage.azurerm_storage_container.demoscontainer will be created
  + resource "azurerm_storage_container" "demoscontainer" {
      + container_access_type   = "private"
      + has_immutability_policy = (known after apply)
      + has_legal_hold          = (known after apply)
      + id                      = (known after apply)
      + metadata                = (known after apply)
      + name                    = "scontainer12345"
      + resource_manager_id     = (known after apply)
      + storage_account_name    = "sademo1212"
    }

  # module.azure_storage.random_string.rgsuffix will be created
  + resource "random_string" "rgsuffix" {
      + id          = (known after apply)
      + length      = 5
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = false
    }

  # module.azure_storage.random_string.storageSuffix will be created
  + resource "random_string" "storageSuffix" {
      + id          = (known after apply)
      + length      = 6
      + lower       = true
      + min_lower   = 0
      + min_numeric = 0
      + min_special = 0
      + min_upper   = 0
      + number      = true
      + numeric     = true
      + result      = (known after apply)
      + special     = false
      + upper       = false
    }

Plan: 5 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.azure_storage.random_string.storageSuffix: Creating...
module.azure_storage.random_string.storageSuffix: Creation complete after 0s [id=a5zcbh]
module.azure_storage.random_string.rgsuffix: Creating...
module.azure_storage.random_string.rgsuffix: Creation complete after 0s [id=y4khs]
module.azure_storage.azurerm_resource_group.demorg: Creating...
module.azure_storage.azurerm_resource_group.demorg: Creation complete after 2s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstore1212]
module.azure_storage.azurerm_storage_account.storagedemo: Creating...
module.azure_storage.azurerm_storage_account.storagedemo: Still creating... [10s elapsed]
module.azure_storage.azurerm_storage_account.storagedemo: Still creating... [20s elapsed]
module.azure_storage.azurerm_storage_account.storagedemo: Creation complete after 25s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/rgstore1212/providers/Microsoft.Storage/storageAccounts/sademo1212]
module.azure_storage.azurerm_storage_container.demoscontainer: Creating...
module.azure_storage.azurerm_storage_container.demoscontainer: Creation complete after 0s [id=https://sademo1212.blob.core.windows.net/scontainer12345]

Apply complete! Resources: 5 added, 0 changed, 0 destroyed.

Outputs:

vmip = "104.210.59.102"
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$

saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$ terraform destroy --auto-approve


module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/admatic-rg-network-demo]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 10s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 20s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 30s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 40s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 50s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 1m0s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Still destroying... [id=/subscriptions/d9bd5677-040c-4455-a75e-...resourceGroups/admatic-rg-network-demo, 1m10s elapsed]
module.azure_linuxvm.azurerm_resource_group.myterraformgroup: Destruction complete after 1m17s

Destroy complete! Resources: 13 destroyed.
saravanans@skillsasap-vm:~/admatic_terraform_workspace/tf_mywebinfra$


saravanans@skillsasap-vm24:~/admatic_terraform_workspace$ tree .
.
├── modules
│   ├── azure_linuxvm
│   │   ├── main.tf
│   │   ├── outputs.tf
│   │   ├── public_ip.tf
│   │   └── variables.tf
│   └── azure_storage
│       ├── main.tf
│       └── variables.tf
└── tf_mywebinfra
    ├── main.tf
    ├── outputs.tf
    ├── providers.tf
    ├── terraform.tfstate
    ├── terraform.tfstate.backup
    └── variables.tf

4 directories, 12 files


