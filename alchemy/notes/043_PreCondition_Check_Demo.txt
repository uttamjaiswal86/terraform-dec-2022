saravanans@skillsasap-vm:~/tf_file_provisioner$ cat main.tf
resource "null_resource" "copy_file" {
  triggers = {
        trigger = timestamp()
  }
  connection {
    type = "ssh"
    host = azurerm_public_ip.myterraformpublicip.ip_address
    user = "admatic"
    password = "Sincere-Compete-Spoil-Private-3"
    port = 22
  } 

  provisioner "file" {
    source = "robochef_stack.sh"
    destination = "/tmp/robochef_stack.sh"
  }

  lifecycle {
    precondition {
      condition = azurerm_public_ip.myterraformpublicip.ip_address != ""
      error_message = "Public Ip must not be empty"
    }
  }

}

variable "data33" {
   default = "100"
}

resource "null_resource" "touchfile" {
	provisioner "local-exec" {
		command = "date > /tmp/robochef-time.txt"
	}
}

resource "null_resource" "remote-provisioner" {

  triggers = {
        trigger = timestamp()
  }
  connection {
    type = "ssh"
    host = azurerm_public_ip.myterraformpublicip.ip_address
    user = "admatic"
    password = "Sincere-Compete-Spoil-Private-3"
    port = 22
  }
	provisioner "remote-exec" {
		inline = [
			"echo Remote Provisioner did this > /tmp/remoteexec.txt",
			"echo Remote Provisioner Completed first execution ",
			"sh /tmp/robochef_stack.sh",
			"ls -l /tmp",
			"cd /tmp && ansible-playbook ansible-playbook.yaml"
			]
	}
  depends_on = [null_resource.copy_file,null_resource.copy_playbook]
}

resource "null_resource" "copy_playbook" {
  triggers = {
        trigger = timestamp()
  }
  connection {
    type = "ssh"
    host = azurerm_public_ip.myterraformpublicip.ip_address
    user = "admatic"
    password = "Sincere-Compete-Spoil-Private-3"
    port = 22
  }

  provisioner "file" {
    source = "files/ansible-playbook.yaml"
    destination = "/tmp/ansible-playbook.yaml"
  }
  lifecycle {
    precondition {
      condition = azurerm_public_ip.myterraformpublicip.ip_address != ""
      error_message = "Public Ip must not be empty"
    }
  }
}

saravanans@skillsasap-vm:~/tf_file_provisioner$ terraform apply

Terraform used the selected providers to generate the following execution plan. Resource
actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_linux_virtual_machine.myterraformvm will be created
  + resource "azurerm_linux_virtual_machine" "myterraformvm" {
      + admin_password                                         = (sensitive value)
      + admin_username                                         = "admatic"
      + allow_extension_operations                             = true
      + bypass_platform_safety_checks_on_user_schedule_enabled = false
      + computer_name                                          = (known after apply)
      + disable_password_authentication                        = false
      + extensions_time_budget                                 = "PT1H30M"
      + id                                                     = (known after apply)
      + location                                               = "eastus"
      + max_bid_price                                          = -1
      + name                                                   = "admaticmyVM"
      + network_interface_ids                                  = (known after apply)
      + patch_assessment_mode                                  = "ImageDefault"
      + patch_mode                                             = "ImageDefault"
      + platform_fault_domain                                  = -1
      + priority                                               = "Regular"
      + private_ip_address                                     = (known after apply)
      + private_ip_addresses                                   = (known after apply)
      + provision_vm_agent                                     = true
      + public_ip_address                                      = (known after apply)
      + public_ip_addresses                                    = (known after apply)
      + resource_group_name                                    = "myResourceGroup"
      + size                                                   = "Standard_B1s"
      + virtual_machine_id                                     = (known after apply)

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = "myOsDisk"
          + storage_account_type      = "Premium_LRS"
          + write_accelerator_enabled = false
        }

      + source_image_reference {
          + offer     = "UbuntuServer"
          + publisher = "Canonical"
          + sku       = "18.04-LTS"
          + version   = "latest"
        }
    }

  # azurerm_network_interface.myterraformnic will be created
  + resource "azurerm_network_interface" "myterraformnic" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "myNIC"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "myResourceGroup"
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          + name                                               = "myNicConfiguration"
          + primary                                            = (known after apply)
          + private_ip_address                                 = (known after apply)
          + private_ip_address_allocation                      = "Dynamic"
          + private_ip_address_version                         = "IPv4"
          + public_ip_address_id                               = (known after apply)
          + subnet_id                                          = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.example will be created
  + resource "azurerm_network_interface_security_group_association" "example" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.myterraformnsg will be created
  + resource "azurerm_network_security_group" "myterraformnsg" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myNetworkSecurityGroup"
      + resource_group_name = "myResourceGroup"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + description                                = ""
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "Web"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
            },
        ]
    }

  # azurerm_public_ip.myterraformpublicip will be created
  + resource "azurerm_public_ip" "myterraformpublicip" {
      + allocation_method       = "Dynamic"
      + ddos_protection_mode    = "VirtualNetworkInherited"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "myPublicIP"
      + resource_group_name     = "myResourceGroup"
      + sku                     = "Basic"
      + sku_tier                = "Regional"
    }

  # azurerm_resource_group.myterraformgroup will be created
  + resource "azurerm_resource_group" "myterraformgroup" {
      + id       = (known after apply)
      + location = "eastus"
      + name     = "myResourceGroup"
    }

  # azurerm_subnet.myterraformsubnet will be created
  + resource "azurerm_subnet" "myterraformsubnet" {
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = (known after apply)
      + enforce_private_link_service_network_policies  = (known after apply)
      + id                                             = (known after apply)
      + name                                           = "mySubnet"
      + private_endpoint_network_policies_enabled      = (known after apply)
      + private_link_service_network_policies_enabled  = (known after apply)
      + resource_group_name                            = "myResourceGroup"
      + virtual_network_name                           = "myVnet"
    }

  # azurerm_virtual_network.myterraformnetwork will be created
  + resource "azurerm_virtual_network" "myterraformnetwork" {
      + address_space       = [
          + "10.0.0.0/16",
        ]
      + dns_servers         = (known after apply)
      + guid                = (known after apply)
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myVnet"
      + resource_group_name = "myResourceGroup"
      + subnet              = (known after apply)
    }

  # null_resource.copy_file will be created
  + resource "null_resource" "copy_file" {
      + id       = (known after apply)
      + triggers = {
          + "trigger" = (known after apply)
        }
    }

  # null_resource.copy_playbook will be created
  + resource "null_resource" "copy_playbook" {
      + id       = (known after apply)
      + triggers = {
          + "trigger" = (known after apply)
        }
    }

  # null_resource.remote-provisioner will be created
  + resource "null_resource" "remote-provisioner" {
      + id       = (known after apply)
      + triggers = {
          + "trigger" = (known after apply)
        }
    }

  # null_resource.touchfile will be created
  + resource "null_resource" "touchfile" {
      + id = (known after apply)
    }

Plan: 12 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + public_ip = (known after apply)

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

null_resource.touchfile: Creating...
null_resource.touchfile: Provisioning with 'local-exec'...
null_resource.touchfile (local-exec): Executing: ["/bin/sh" "-c" "date > /tmp/robochef-time.txt"]
null_resource.touchfile: Creation complete after 0s [id=7445971711554224992]
azurerm_resource_group.myterraformgroup: Creating...
azurerm_resource_group.myterraformgroup: Creation complete after 3s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup]
azurerm_virtual_network.myterraformnetwork: Creating...
azurerm_network_security_group.myterraformnsg: Creating...
azurerm_public_ip.myterraformpublicip: Creating...
azurerm_public_ip.myterraformpublicip: Creation complete after 6s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/publicIPAddresses/myPublicIP]
azurerm_network_security_group.myterraformnsg: Creation complete after 9s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_virtual_network.myterraformnetwork: Creation complete after 9s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet]
azurerm_subnet.myterraformsubnet: Creating...
azurerm_subnet.myterraformsubnet: Creation complete after 8s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/virtualNetworks/myVnet/subnets/mySubnet]
azurerm_network_interface.myterraformnic: Creating...
azurerm_network_interface.myterraformnic: Still creating... [10s elapsed]
azurerm_network_interface.myterraformnic: Creation complete after 13s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNIC]
azurerm_network_interface_security_group_association.example: Creating...
azurerm_linux_virtual_machine.myterraformvm: Creating...
azurerm_network_interface_security_group_association.example: Creation complete after 4s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkInterfaces/myNIC|/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Network/networkSecurityGroups/myNetworkSecurityGroup]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [10s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Still creating... [20s elapsed]
azurerm_linux_virtual_machine.myterraformvm: Creation complete after 22s [id=/subscriptions/d9bd5677-040c-4455-a75e-5830c2c503f9/resourceGroups/myResourceGroup/providers/Microsoft.Compute/virtualMachines/admaticmyVM]
╷
│ Error: Resource precondition failed
│
│   on main.tf line 20, in resource "null_resource" "copy_file":
│   20:       condition = azurerm_public_ip.myterraformpublicip.ip_address != ""
│     ├────────────────
│     │ azurerm_public_ip.myterraformpublicip.ip_address is ""
│
│ Public Ip must not be empty
╵
╷
│ Error: Resource precondition failed
│
│   on main.tf line 79, in resource "null_resource" "copy_playbook":
│   79:       condition = azurerm_public_ip.myterraformpublicip.ip_address != ""
│     ├────────────────
│     │ azurerm_public_ip.myterraformpublicip.ip_address is ""
│
│ Public Ip must not be empty
╵
saravanans@skillsasap-vm:~/tf_file_provisioner$